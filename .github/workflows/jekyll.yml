# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Workflow for building and deploying Jekyll site with optional beta docs to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes to main or beta branches
  push:
    branches: ["main", "beta"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      # Build main version (root)
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-site
      
      - name: Setup Ruby for main
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.1'
          working-directory: main-site
          bundler-cache: true
      
      - name: Build main site
        run: |
          cd main-site
          bundle exec jekyll build --destination ../_site/
        env:
          JEKYLL_ENV: production
      
      # Check if beta branch exists and build it
      - name: Check if beta branch exists
        id: check-beta
        run: |
          # Use GitHub API to check if beta branch exists
          if curl -s -f "https://api.github.com/repos/${{ github.repository }}/branches/beta" > /dev/null 2>&1; then
            echo "beta_exists=true" >> $GITHUB_OUTPUT
            echo "Beta branch exists, will build beta docs"
          else
            echo "beta_exists=false" >> $GITHUB_OUTPUT
            echo "Beta branch does not exist, skipping beta docs"
          fi
      
      - name: Checkout beta branch
        if: steps.check-beta.outputs.beta_exists == 'true'
        uses: actions/checkout@v4
        with:
          ref: beta
          path: beta-site
      
      - name: Setup Ruby for beta
        if: steps.check-beta.outputs.beta_exists == 'true'
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.1'
          working-directory: beta-site
          bundler-cache: true
      
      - name: Configure beta for subdirectory
        if: steps.check-beta.outputs.beta_exists == 'true'
        run: |
          cd beta-site
          # Update baseurl for subdirectory deployment
          sed -i 's|baseurl: ""|baseurl: "/beta"|' _config.yml
      
      - name: Build beta site
        if: steps.check-beta.outputs.beta_exists == 'true'
        run: |
          cd beta-site
          bundle exec jekyll build --destination ../_site/beta/
        env:
          JEKYLL_ENV: production
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
